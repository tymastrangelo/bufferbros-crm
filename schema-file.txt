-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.addons (
  id bigint NOT NULL DEFAULT nextval('addons_id_seq'::regclass),
  name text NOT NULL,
  description text,
  price numeric DEFAULT 0,
  duration_estimate_minutes integer,
  CONSTRAINT addons_pkey PRIMARY KEY (id)
);
CREATE TABLE public.clients (
  id bigint NOT NULL DEFAULT nextval('clients_id_seq'::regclass),
  created_at timestamp with time zone DEFAULT now(),
  full_name text NOT NULL,
  phone text,
  email text,
  address text,
  preferred_contact_method text DEFAULT 'phone'::text,
  notes text,
  CONSTRAINT clients_pkey PRIMARY KEY (id)
);
CREATE TABLE public.communications (
  id bigint NOT NULL DEFAULT nextval('communications_id_seq'::regclass),
  created_at timestamp with time zone DEFAULT now(),
  client_id bigint,
  type text,
  message text,
  outcome text,
  followup_date timestamp with time zone,
  CONSTRAINT communications_pkey PRIMARY KEY (id),
  CONSTRAINT communications_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.clients(id)
);
CREATE TABLE public.expenses (
  id bigint NOT NULL DEFAULT nextval('expenses_id_seq'::regclass),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  date date NOT NULL,
  description text NOT NULL,
  amount numeric NOT NULL,
  category text,
  CONSTRAINT expenses_pkey PRIMARY KEY (id)
);
CREATE TABLE public.invoices (
  id bigint NOT NULL DEFAULT nextval('invoices_id_seq'::regclass),
  created_at timestamp with time zone DEFAULT now(),
  job_id bigint,
  amount numeric NOT NULL,
  status text DEFAULT 'unpaid'::text CHECK (status = ANY (ARRAY['unpaid'::text, 'paid'::text, 'overdue'::text])),
  payment_method text,
  transaction_date timestamp with time zone,
  CONSTRAINT invoices_pkey PRIMARY KEY (id),
  CONSTRAINT invoices_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id)
);
CREATE TABLE public.job_addons (
  job_id bigint NOT NULL,
  addon_id bigint NOT NULL,
  CONSTRAINT job_addons_pkey PRIMARY KEY (job_id, addon_id),
  CONSTRAINT job_addons_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id),
  CONSTRAINT job_addons_addon_id_fkey FOREIGN KEY (addon_id) REFERENCES public.addons(id)
);
CREATE TABLE public.jobs (
  id bigint NOT NULL DEFAULT nextval('jobs_id_seq'::regclass),
  created_at timestamp with time zone DEFAULT now(),
  client_id bigint,
  vehicle_id bigint,
  service_id bigint,
  status text DEFAULT 'new'::text CHECK (status = ANY (ARRAY['new'::text, 'quoted'::text, 'scheduled'::text, 'in_progress'::text, 'completed'::text, 'paid'::text, 'cancelled'::text])),
  scheduled_date timestamp with time zone,
  total_price numeric,
  notes text,
  employee_percent numeric DEFAULT 60 CHECK (employee_percent >= 0::numeric AND employee_percent <= 100::numeric),
  CONSTRAINT jobs_pkey PRIMARY KEY (id),
  CONSTRAINT jobs_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.clients(id),
  CONSTRAINT jobs_vehicle_id_fkey FOREIGN KEY (vehicle_id) REFERENCES public.vehicles(id),
  CONSTRAINT jobs_service_id_fkey FOREIGN KEY (service_id) REFERENCES public.services(id)
);
CREATE TABLE public.quote_submissions (
  id bigint NOT NULL DEFAULT nextval('quote_submissions_id_seq'::regclass),
  created_at timestamp with time zone DEFAULT now(),
  full_name text NOT NULL,
  phone text,
  email text,
  vehicles jsonb,
  preferred_package text,
  add_ons ARRAY,
  service_address text,
  special_requests text,
  status text DEFAULT 'new'::text CHECK (status = ANY (ARRAY['new'::text, 'contacted'::text, 'quoted'::text, 'scheduled'::text, 'closed'::text, 'archived'::text])),
  client_id bigint,
  CONSTRAINT quote_submissions_pkey PRIMARY KEY (id),
  CONSTRAINT quote_submissions_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.clients(id)
);
CREATE TABLE public.services (
  id bigint NOT NULL DEFAULT nextval('services_id_seq'::regclass),
  name text NOT NULL,
  description text,
  base_price numeric DEFAULT 0,
  duration_estimate_minutes integer,
  CONSTRAINT services_pkey PRIMARY KEY (id)
);
CREATE TABLE public.vehicles (
  id bigint NOT NULL DEFAULT nextval('vehicles_id_seq'::regclass),
  created_at timestamp with time zone DEFAULT now(),
  client_id bigint,
  year integer,
  make text,
  model text,
  type text,
  color text,
  license_plate text,
  notes text,
  CONSTRAINT vehicles_pkey PRIMARY KEY (id),
  CONSTRAINT vehicles_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.clients(id)
);